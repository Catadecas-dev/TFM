name: Deploy Ghost Multi-Cloud

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  deploy-to-aws-eks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Update kubeconfig for EKS
        run: aws eks update-kubeconfig --name my-eks-cluster --region us-east-1

      - name: Create/Update Kubernetes Secret
        run: |
          kubectl create secret generic ghost-db-secret \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PASS='${{ secrets.DB_PASS }}' \
            --from-literal=DB_DATABASE=${{ secrets.DB_NAME }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Kubernetes Mail Secret
        run: |
          kubectl create secret generic ghost-mail-secret \
            --from-literal=SES_HOST=${{ secrets.SES_HOST }} \
            --from-literal=SES_USER=${{ secrets.SES_USER }} \
            --from-literal=SES_PASS=${{ secrets.SES_PASS }} \
            --from-literal=MAIL_FROM_ADDRESS='${{ secrets.MAIL_FROM_ADDRESS }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Ghost to EKS
        run: |
          kubectl apply -f kubernetes/service.yaml

          echo "Waiting for EKS LoadBalancer..."
          while [ -z "$(kubectl get service ghost-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')" ]; do sleep 10; done
          HOSTNAME=$(kubectl get service ghost-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          echo "EKS Hostname: $HOSTNAME"

          sed -i "s|__APP_URL__|http://$HOSTNAME|g" kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml

      - name: Verify EKS Deployment
        run: |
          kubectl rollout status deployment/ghost-deployment
          echo "Ghost successfully deployed to AWS EKS."

  deploy-to-azure-aks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: aks-resource-group
          cluster-name: my-aks-cluster

      - name: Create/Update Kubernetes Secret
        run: |
          kubectl create secret generic ghost-db-secret \
            --from-literal=DB_HOST=${{ secrets.DB_HOST }} \
            --from-literal=DB_USER=${{ secrets.DB_USER }} \
            --from-literal=DB_PASS='${{ secrets.DB_PASS }}' \
            --from-literal=DB_DATABASE=${{ secrets.DB_NAME }} \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Create/Update Kubernetes Mail Secret
        run: |
          kubectl create secret generic ghost-mail-secret \
            --from-literal=SES_HOST=${{ secrets.SES_HOST }} \
            --from-literal=SES_USER=${{ secrets.SES_USER }} \
            --from-literal=SES_PASS=${{ secrets.SES_PASS }} \
            --from-literal=MAIL_FROM_ADDRESS='${{ secrets.MAIL_FROM_ADDRESS }}' \
            --dry-run=client -o yaml | kubectl apply -f -

      - name: Deploy Ghost to AKS
        run: |
          kubectl apply -f kubernetes/service.yaml

          echo "Waiting for AKS LoadBalancer..."
          while [ -z "$(kubectl get service ghost-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')" ]; do sleep 10; done
          IP=$(kubectl get service ghost-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')
          echo "AKS IP: $IP"

          sed -i "s|__APP_URL__|http://$IP|g" kubernetes/deployment.yaml
          kubectl apply -f kubernetes/deployment.yaml

      - name: Verify AKS Deployment
        run: |
          kubectl rollout status deployment/ghost-deployment
          echo "Ghost successfully deployed to Azure AKS."
