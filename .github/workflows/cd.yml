name: CD Pipeline

# This workflow deploys to both AWS EKS and Azure AKS
# Required secrets:
# - AWS_ACCESS_KEY_ID: AWS access key with EKS permissions
# - AWS_SECRET_ACCESS_KEY: AWS secret access key
# - AZURE_CREDENTIALS: JSON output from az ad sp create-for-rbac
# - DB_HOST: The hostname of the MySQL database
# - DB_DATABASE: The name of the BookStack database (e.g., bookstackdb)
# - DB_USER: The username for the database
# - DB_PASS: The password for the database

on:
  workflow_dispatch:

jobs:
  deploy-aws:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    - name: Update kubeconfig
      run: aws eks update-kubeconfig --name my-eks-cluster --region us-east-1

    - name: Create Kubernetes Secret
      run: |
        DB_HOST=$(echo -n ${{ secrets.DB_HOST }} | base64)
        DB_DATABASE=$(echo -n ${{ secrets.DB_DATABASE }} | base64)
        DB_USER=$(echo -n ${{ secrets.DB_USER }} | base64)
        DB_PASS=$(echo -n ${{ secrets.DB_PASS }} | base64)

        sed -i "s|REPLACE_WITH_BASE64_DB_HOST|$DB_HOST|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_DATABASE|$DB_DATABASE|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_USER|$DB_USER|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_PASS|$DB_PASS|" kubernetes/secrets.yaml

    - name: Deploy to AWS EKS
      run: |
        kubectl apply -f kubernetes/secrets.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/bookstack-deployment
        echo "Application deployed to AWS EKS: $(kubectl get service bookstack-service -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')"

  deploy-azure:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Set AKS context
      uses: azure/aks-set-context@v3
      with:
        resource-group: aks-resource-group
        cluster-name: my-aks-cluster

    - name: Create Kubernetes Secret
      run: |
        DB_HOST=$(echo -n ${{ secrets.DB_HOST }} | base64)
        DB_DATABASE=$(echo -n ${{ secrets.DB_DATABASE }} | base64)
        DB_USER=$(echo -n ${{ secrets.DB_USER }} | base64)
        DB_PASS=$(echo -n ${{ secrets.DB_PASS }} | base64)

        sed -i "s|REPLACE_WITH_BASE64_DB_HOST|$DB_HOST|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_DATABASE|$DB_DATABASE|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_USER|$DB_USER|" kubernetes/secrets.yaml
        sed -i "s|REPLACE_WITH_BASE64_DB_PASS|$DB_PASS|" kubernetes/secrets.yaml

    - name: Deploy to Azure AKS
      run: |
        kubectl apply -f kubernetes/secrets.yaml
        kubectl apply -f kubernetes/deployment.yaml
        kubectl apply -f kubernetes/service.yaml

    - name: Verify deployment
      run: |
        kubectl rollout status deployment/bookstack-deployment
        echo "Application deployed to Azure AKS: $(kubectl get service bookstack-service -o jsonpath='{.status.loadBalancer.ingress[0].ip}')"
